框架
    MVT
        model 模型 ---> 与数据库交互
        view 视图 ---> 负责处理用户请求和生成响应，通过逻辑控制来决定数据如何展示和操作
        template 模版  ---> 页面

一：搭建框架：
    1：搭建虚拟环境
    2：切换虚拟环境并且pip3 install flask
    3：flask环境搭建
        a：app = Flask(__name__)
        b：关联服务器并启动；app.run(host='',port='')
            在启动的时候默认的模式是production，还有一个development；两种模式在不同的场景有不同的用处
            debug模式开启，不需要每次重启服务
        c：注册路由：@app.route('')
        d：解耦settings.py配置内容

二：路由
    具体查看下方的app、app1、app2的py文件

三：请求与响应
    请求：
        client发出一个请求，flask就会自动将请求封装成一个对象
    响应：
        在视图函数的返回值后面可以跟：
            1：string：系统会自动将str转成一个response对象
            2：make_response() 构建response对象，可以给response对象添加一些头部信息
            3：jsonify(datas) 将datas转成json的格式，dict默认使用此函数
            4：render_template 渲染模版
            5：from flask import redirect 重定向，会发起两次请求，第一次请求会在response对象里携带
            新的location（新的路由地址）与302，浏览器看见302继续发起第二次请求（location新地址）

